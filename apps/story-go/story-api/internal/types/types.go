// Code generated by goctl. DO NOT EDIT.
package types

type Request struct {
	Name string `path:"name,options=[you,me]"` // parameters are auto validated
}

type Response struct {
	Message string `json:"message"`
}

type StoriesRequest struct {
	Keyword string `query:"keyword"` // parameters are auto validated
}

type Story struct {
	Id          int64  `json:"id,optional"`
	Name        string `json:"name,optional"`
	Description string `json:"description,optional"`
	Data        string `json:"data,optional"`
	CreateTime  string `json:"create_time,optional"`
	UpdateTime  string `json:"update_time,optional"`
	AudioLink   string `json:"audio_link,optional"`
	AudioUrl    string `json:"audio_Url,optional"`
	Status      int32  `json:"status,optional"`
}

type CosCredentials struct {
	TmpSecretID  string `json:"TmpSecretId,omitempty"`
	TmpSecretKey string `json:"TmpSecretKey,omitempty"`
	SessionToken string `json:"Token,omitempty"`
}

type StoryRequest struct {
	Story  Story `json:"story,optional"`
	Random bool  `json:"random,optional"`
}

type StoryDetailRequest struct {
	Id     int64 `form:"id,optional"`
	Random bool  `form:"random,optional"`
}

type StoryResponse struct {
	Message string `json:"message"`
	Data    Story  `json:"data"`
}

type StoriesResponse struct {
	Message string  `json:"message"`
	Data    []Story `json:"data"`
}

type CosCredentialsResponse struct {
	Message string         `json:"message"`
	Data    CosCredentials `json:"data"`
}

type CosCredentialsRequest struct {
	Key string `form:"key"`
}

type TextToSpeechResponse struct {
	Data []byte `json:"data"`
}

type TextToSpeechRequest struct {
	Text string `json:"text"`
}
